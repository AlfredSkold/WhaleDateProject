@model WhaleDateProject.Models.ProfileViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Bootstrap Example</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

</head>
<body>

    <div class="container-fluid">
        <div class="row content">
            <div class="col-sm-3 sidenav">
                <h3>@Model.User.Firstname @Model.User.Lastname</h3>
                @using (Html.BeginForm("Info", "Edit", null, FormMethod.Post))
    {
            <ul class="list-group nav nav-pill nav-stacked">

                <li class="list-group-item">Ålder:</li>
                <li class="list-group-item list-group-item-info">
                    @Html.EditorFor(m => m.User.Age)<br />
                    @Html.ValidationMessageFor(m => m.User.Age, "", new { @class = "text-danger" })
                </li>
                <li class="list-group-item">Typ:</li>
                <li class="list-group-item list-group-item-info">
                    @Html.EditorFor(m => m.User.Type) <br />
                    @Html.ValidationMessageFor(m => m.User.Type, "", new { @class = "text-danger" })
                </li>
                <li class="list-group-item">Jag är:</li>
                <li class="list-group-item list-group-item-info">
                    <div class="form-group">
                        @Html.LabelFor(m => m.User.Gender, "", new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @{
                    List<SelectListItem> genderListItems = new List<SelectListItem>();
                    genderListItems.Add(new SelectListItem
                    {
                        Text = "Hona",
                        Value = "Hona"
                    });
                    genderListItems.Add(new SelectListItem
                    {
                        Text = "Hane",
                        Value = "Hane",
                    });
                    genderListItems.Add(new SelectListItem
                    {
                        Text = "Annan",
                        Value = "Annan"
                    });
                            }

                            @Html.DropDownListFor(model => model.User.Gender, genderListItems)
                        </div>
                    </div>
                </li>
                <li class="list-group-item">Intresserad av: </li>
                <li class="list-group-item list-group-item-info">
                    <div class="form-group">
                        @Html.LabelFor(m => m.User.InterestedIn, "", new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @{
                    List<SelectListItem> listItems = new List<SelectListItem>();
                    listItems.Add(new SelectListItem
                    {
                        Text = "Hona",
                        Value = "Hona"
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "Hane",
                        Value = "Hane",
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "Annan",
                        Value = "Annan"
                    });
                            }

                            @Html.DropDownListFor(model => model.User.InterestedIn, listItems)
                        </div>
                    </div>
                </li>
                <li class="list-group-item list-group-item-info">
                    <div class="radio">
                        <label>Privat profil @Html.EditorFor(m => m.User.Private)</label>
                    </div>
                </li>

            </ul>
            <input type="submit" value="Ändra">
}

                <br />
                <h4>Nytt inlägg:</h4>
                @*@Html.ValidationMessageFor(m => m.post.Text)*@
                <script>
                function addPost() {
                    var Text = $('#Text').val();
                    var Sender = '@User.Identity.Name';
                    var Reciever = '@Model.User.UserName';
                    var newPost = {FromUsername: Sender, ToUsername: Reciever, Text: Text};
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("Post","Post", new { httproute = "" })',
                            data: JSON.stringify(newPost),
                            contentType:'application/json',
                            datatype: 'json',
                            success: function (data) {
                                $('#Text').val('');
                                location.reload();
                            }
                        })
                    };
                </script>

                <div class="form-group">

                    <textarea id="Text" rows="3" cols="500"></textarea><br />
                    <input type="button" value="Skicka inlägg" onclick="addPost()" />

                </div>

            </div>

            <div class="col-sm-6">
                <h4><small><br>INLÄGG</small></h4>
                
                @foreach (var item in Model.Posts.OrderByDescending(t => t.Id))
                {
                    <hr>
                    <h2>@item.From.Firstname @item.From.Lastname</h2>
                    <h5><span class="glyphicon glyphicon-time"></span>@item.Date </h5>
                    <p>@item.Text</p>
                    <br><br>
                }

            </div>

            <div class="col-sm-3 sidenav">
                @using (Html.BeginForm("Photo", "Edit", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
                {

                    <div>
                        <input type="file" name="upload" value="Välj bild" />
                        <img class="img-rounded img-responsive" src="@Url.Action("Image", new { username = Model.User.UserName })" />
                        <input type="submit" value="Byt" />
                    </div>
                }
                <label for="Bio">Om mig:</label>

                <div class="panel panel-default sidenav">
                    @using (Html.BeginForm("Bio", "Edit", null, FormMethod.Post))
                    {
                        @Html.EditorFor(m => m.User.Bio)
                        <input type="submit" value="Ändra">
                    }
                </div>
            </div>
        </div>
    </div>

</body>
</html>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}